
Memory Configuration

Name             Origin             Length             Attributes
vexriscv_debug   0x00000000f00f0000 0x0000000000000100
dff              0x0000000000000000 0x0000000000000400
dff2             0x0000000000000400 0x0000000000000200
flash            0x0000000010000000 0x0000000001000000
mprj             0x0000000030000000 0x0000000000100000
fir_tap          0x0000000038000000 0x0000000000000040
fir_x            0x0000000038000040 0x0000000000000040
fir_y            0x0000000038000080 0x0000000000000040
mm_a             0x00000000380000c0 0x0000000000000040
mm_b             0x0000000038000100 0x0000000000000040
mm_o             0x0000000038000140 0x0000000000000040
qs_a             0x0000000038000180 0x0000000000000040
qs_o             0x00000000380001c0 0x0000000000000040
mprjram          0x0000000038000200 0x0000000000000200
hk               0x0000000026000000 0x0000000000100000
csr              0x00000000f0000000 0x0000000000010000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000000000                __DYNAMIC = 0x0

.text           0x0000000010000000      0xdc0
                0x0000000010000000                _ftext = .
 *crt0*(.text)
 .text          0x0000000010000000      0x150 final.elf-crt0_vex.o
                0x0000000010000000                _start
                0x0000000010000020                trap_entry
 *crt0*(.text)
 *(.text.isr)
                0x0000000010000150                _etext = .
 .text          0x0000000010000150      0x15c final.elf-isr.o
                0x0000000010000240                isr
 .text          0x00000000100002ac       0x38 final.elf-uart.o
 .text          0x00000000100002e4      0xadc final.elf-final.o
                0x0000000010000384                init_data
                0x00000000100008a8                main

.mprj           0x0000000010000dc0      0x1ec
 .mprj          0x0000000010000dc0      0x1ec final.elf-uart.o
                0x0000000010000dc0                uart_write
                0x0000000010000e08                uart_write_char
                0x0000000010000e70                uart_write_string
                0x0000000010000ec4                uart_read_char
                0x0000000010000f38                uart_read

.rela.dyn       0x0000000010000fac        0x0
 .rela.text     0x0000000010000fac        0x0 final.elf-crt0_vex.o

.rodata         0x0000000010000fac        0x4
                0x0000000010000fb0                . = ALIGN (0x8)
 *fill*         0x0000000010000fac        0x4 
                0x0000000010000fb0                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 *(.rodata1)
                0x0000000010000fb0                . = ALIGN (0x8)
                0x0000000010000fb0                _erodata = .

.data           0x0000000000000000        0x8 load address 0x0000000010000fb0
                0x0000000000000000                . = ALIGN (0x8)
                0x00000000380001c0                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000000000        0x0 final.elf-crt0_vex.o
 .data          0x0000000000000000        0x0 final.elf-isr.o
 .data          0x0000000000000000        0x0 final.elf-uart.o
 .data          0x0000000000000000        0x0 final.elf-final.o
 *(.data1)
                0x00000000380001c0                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
 .sdata         0x0000000000000000        0x4 final.elf-isr.o
                0x0000000000000000                counter
                0x0000000000000008                . = ALIGN (0x8)
 *fill*         0x0000000000000004        0x4 
                0x00000000380001c0                _edata = .

.bss            0x0000000000000008        0x0 load address 0x0000000010000fb8
                0x0000000000000008                . = ALIGN (0x8)
                0x0000000000000008                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000000008        0x0 final.elf-crt0_vex.o
 .bss           0x0000000000000008        0x0 final.elf-isr.o
 .bss           0x0000000000000008        0x0 final.elf-uart.o
 .bss           0x0000000000000008        0x0 final.elf-final.o
 *(COMMON)
                0x0000000000000008                . = ALIGN (0x8)
                0x0000000000000008                _ebss = .
                0x0000000000000008                _end = .

.fir_tap        0x0000000038000000       0x2c load address 0x0000000010000fb8
                0x0000000038000000                . = ALIGN (0x8)
                0x00000000380001c0                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 *(.data1)
                0x00000000380001c0                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x0000000038000000                . = ALIGN (0x8)
                0x00000000380001c0                _edata = .
 .fir_tap       0x0000000038000000       0x2c final.elf-final.o
                0x0000000038000000                taps

.fir_x          0x0000000038000040       0x40 load address 0x0000000010000fe4
                0x0000000038000040                . = ALIGN (0x8)
                0x00000000380001c0                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 *(.data1)
                0x00000000380001c0                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x0000000038000040                . = ALIGN (0x8)
                0x00000000380001c0                _edata = .
 .fir_x         0x0000000038000040       0x40 final.elf-final.o
                0x0000000038000040                inputsignal

.fir_y          0x0000000038000080       0x40 load address 0x0000000010001024
                0x0000000038000080                . = ALIGN (0x8)
                0x00000000380001c0                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 *(.data1)
                0x00000000380001c0                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x0000000038000080                . = ALIGN (0x8)
                0x00000000380001c0                _edata = .
 .fir_y         0x0000000038000080       0x40 final.elf-final.o
                0x0000000038000080                outputsignal

.mm_a           0x00000000380000c0       0x40 load address 0x0000000010001064
                0x00000000380000c0                . = ALIGN (0x8)
                0x00000000380001c0                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 *(.data1)
                0x00000000380001c0                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x00000000380000c0                . = ALIGN (0x8)
                0x00000000380001c0                _edata = .
 .mm_a          0x00000000380000c0       0x40 final.elf-final.o
                0x00000000380000c0                Am

.mm_b           0x0000000038000100       0x40 load address 0x00000000100010a4
                0x0000000038000100                . = ALIGN (0x8)
                0x00000000380001c0                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 *(.data1)
                0x00000000380001c0                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x0000000038000100                . = ALIGN (0x8)
                0x00000000380001c0                _edata = .
 .mm_b          0x0000000038000100       0x40 final.elf-final.o
                0x0000000038000100                Bm

.mm_o           0x0000000038000140       0x40 load address 0x00000000100010e4
                0x0000000038000140                . = ALIGN (0x8)
                0x00000000380001c0                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 *(.data1)
                0x00000000380001c0                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x0000000038000140                . = ALIGN (0x8)
                0x00000000380001c0                _edata = .
 .mm_o          0x0000000038000140       0x40 final.elf-final.o
                0x0000000038000140                Mo

.qs_a           0x0000000038000180       0x40 load address 0x0000000010001124
                0x0000000038000180                . = ALIGN (0x8)
                0x00000000380001c0                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 *(.data1)
                0x00000000380001c0                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x0000000038000180                . = ALIGN (0x8)
                0x00000000380001c0                _edata = .
 .qs_a          0x0000000038000180       0x40 final.elf-final.o
                0x0000000038000180                Aq

.qs_o           0x00000000380001c0       0x40 load address 0x0000000010001164
                0x00000000380001c0                . = ALIGN (0x8)
                0x00000000380001c0                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 *(.data1)
                0x00000000380001c0                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x00000000380001c0                . = ALIGN (0x8)
                0x00000000380001c0                _edata = .
 .qs_o          0x00000000380001c0       0x40 final.elf-final.o
                0x00000000380001c0                Vo

.mprjram        0x0000000038000200        0x0 load address 0x00000000100011a4
                0x0000000038000200                . = ALIGN (0x8)
                0x0000000038000200                _fsram = .
 *libgcc.a:*(.text .text.*)
                0x0000000000000600                PROVIDE (_fstack = (ORIGIN (dff2) + LENGTH (dff2)))
                0x0000000010000fb0                PROVIDE (_fdata_rom = LOADADDR (.data))
                [!provide]                        PROVIDE (_edata_rom = (LOADADDR (.data) + SIZEOF (.data)))
                0x0000000038000200                PROVIDE (_esram = (ORIGIN (mprjram) + SIZEOF (.mprjram)))
                0x00000000100011a4                PROVIDE (_esram_rom = LOADADDR (.mprjram))
LOAD final.elf-crt0_vex.o
LOAD final.elf-isr.o
LOAD final.elf-uart.o
LOAD final.elf-final.o
LOAD /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/libgcc.a
START GROUP
LOAD /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/../../../../riscv32-unknown-elf/lib/libc.a
LOAD /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/../../../../riscv32-unknown-elf/lib/libgloss.a
END GROUP
LOAD /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/libgcc.a
OUTPUT(final.elf elf32-littleriscv)

.riscv.attributes
                0x0000000000000000       0x20
 .riscv.attributes
                0x0000000000000000       0x1e final.elf-crt0_vex.o
 .riscv.attributes
                0x000000000000001e       0x20 final.elf-isr.o
 .riscv.attributes
                0x000000000000003e       0x1c final.elf-uart.o
 .riscv.attributes
                0x000000000000005a       0x20 final.elf-final.o

.comment        0x0000000000000000       0x1b
 .comment       0x0000000000000000       0x1b final.elf-isr.o
                                         0x1c (size before relaxing)
 .comment       0x000000000000001b       0x1c final.elf-uart.o
 .comment       0x000000000000001b       0x1c final.elf-final.o

.debug_line     0x0000000000000000      0xd68
 .debug_line    0x0000000000000000      0x20a final.elf-crt0_vex.o
 .debug_line    0x000000000000020a      0x151 final.elf-isr.o
 .debug_line    0x000000000000035b      0x25e final.elf-uart.o
 .debug_line    0x00000000000005b9      0x7af final.elf-final.o

.debug_line_str
                0x0000000000000000       0xe8
 .debug_line_str
                0x0000000000000000       0x45 final.elf-crt0_vex.o
 .debug_line_str
                0x0000000000000045       0x8c final.elf-isr.o
                                         0xfd (size before relaxing)
 .debug_line_str
                0x00000000000000d1        0x7 final.elf-uart.o
                                         0xc6 (size before relaxing)
 .debug_line_str
                0x00000000000000d8       0x10 final.elf-final.o
                                         0xfc (size before relaxing)

.debug_info     0x0000000000000000      0x5ae
 .debug_info    0x0000000000000000       0x25 final.elf-crt0_vex.o
 .debug_info    0x0000000000000025      0x1a3 final.elf-isr.o
 .debug_info    0x00000000000001c8      0x18c final.elf-uart.o
 .debug_info    0x0000000000000354      0x25a final.elf-final.o

.debug_abbrev   0x0000000000000000      0x3a0
 .debug_abbrev  0x0000000000000000       0x14 final.elf-crt0_vex.o
 .debug_abbrev  0x0000000000000014      0x131 final.elf-isr.o
 .debug_abbrev  0x0000000000000145       0xe3 final.elf-uart.o
 .debug_abbrev  0x0000000000000228      0x178 final.elf-final.o

.debug_aranges  0x0000000000000000       0xa8
 .debug_aranges
                0x0000000000000000       0x20 final.elf-crt0_vex.o
 .debug_aranges
                0x0000000000000020       0x20 final.elf-isr.o
 .debug_aranges
                0x0000000000000040       0x48 final.elf-uart.o
 .debug_aranges
                0x0000000000000088       0x20 final.elf-final.o

.debug_str      0x0000000000000000      0x20f
 .debug_str     0x0000000000000000       0x51 final.elf-crt0_vex.o
 .debug_str     0x0000000000000051      0x139 final.elf-isr.o
                                        0x17a (size before relaxing)
 .debug_str     0x000000000000018a       0x31 final.elf-uart.o
                                        0x151 (size before relaxing)
 .debug_str     0x00000000000001bb       0x54 final.elf-final.o
                                        0x17c (size before relaxing)

.debug_frame    0x0000000000000000      0x364
 .debug_frame   0x0000000000000000      0x118 final.elf-isr.o
 .debug_frame   0x0000000000000118      0x114 final.elf-uart.o
 .debug_frame   0x000000000000022c      0x138 final.elf-final.o

.debug_rnglists
                0x0000000000000000       0x43
 .debug_rnglists
                0x0000000000000000       0x43 final.elf-uart.o
